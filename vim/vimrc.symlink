set mouse=a

set number
set encoding=utf-8
set autoindent
set smartcase " or: ignorecase
set ruler

" Expand tabs to 2 spaces
set expandtab
set ts=2
set sw=2
"set bs=4 " backspace deletes over eol,indent and start
set completeopt=menu,menuone,longest

syntax on
colorscheme molokai

filetype plugin on
filetype indent on

"
" General key settings
"

inoremap <C-c> <Esc>
"let mapleader=","

" Toggle paste mode
set pastetoggle=<F9>

" nerd tree keys
noremap <C-t> :NERDTreeToggle<CR>

"
" Highlight lines longer than 80 characters
"

highlight OverLength ctermfg=9 ctermbg=16

autocmd BufEnter * match OverLength /\%81v.\{,3}/

"
" Remove trailing space on write
"

"set list listchars=tab:»·,trail:·

function! TrimWhitespace()
  let l:winview = winsaveview()
  silent! %s/\s\+$//
  call winrestview(l:winview)
endfunction

augroup trim_whitespace
  autocmd!
  autocmd BufWritePre *.h,*.hpp,*.c,*.cpp,*.hs,*.lhs,*.js,*.html,*.css,*.psql,*.gp
        \ call TrimWhitespace()
augroup END

"
" Tags for C/C++ files
"

set tags+=.tags

function! GenerateTags()
  !ctags -R -f .tags
endfunction

augroup cpp_au
  autocmd!

  " Use 4 spaces for indent
  au FileType c,cpp setlocal ts=4 sw=4

  " Generate .tags file after writing a buffer
  au BufWritePost *.h,*.hpp call GenerateTags()


  " tags: Jump to definition & center buffer
  au BufEnter *.c,*.cpp,*.h,*.hpp nnoremap <CR> <C-]>zz
  au BufEnter *.c,*.cpp,*.h,*.hpp nnoremap <C-w><CR> :vsp<CR><C-]>zz

  " tags: Pop tag
  "au BufEnter *.c,*.cpp,*.h,*.hpp nnoremap <CR> :pop<CR>

  " a.vim: switch between header/implementation
  au BufEnter *.c,*.cpp,*.h,*.hpp nnoremap <Tab> :A<CR>zz
  au BufEnter *.c,*.cpp,*.h,*.hpp nnoremap <C-w><Tab> :AV<CR>zz

augroup END

"
" Restore cursor position:
" http://vim.wikia.com/wiki/Restore_cursor_to_file_position_in_previous_editing_session
"

function! ResCur()
  if line("'\"") <= line("$")
    normal! g`"
    return 1
  endif
endfunction

augroup resCur
  autocmd!
  autocmd BufWinEnter * call ResCur()
  autocmd BufWinEnter * normal! zz
augroup END

"
" Filetype autocommands
"

augroup Gnuplot
  autocmd!
  autocmd BufEnter *.gp set filetype=gnuplot
  autocmd BufEnter *.gp noremap <C-g> :!gnuplot %<CR>
augroup END

augroup Haskell
  autocmd!
  autocmd BufEnter *.hs,*.lhs set filetype=haskell
  autocmd BufEnter *.hs,*.lhs noremap <C-g> :w<CR>:!ghci -Wall %<CR>
  "autocmd BufEnter *.hs,*.lhs compiler ghc
augroup END
